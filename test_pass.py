# from qiskit.providers.aer import QasmSimulator
# from qiskit.transpiler import PassManagerConfig, CouplingMap
# from qiskit.transpiler.preset_passmanagers import level_3_pass_manager
# from qiskit.test.mock import FakeMontreal


# def pm_config(backend):
#     return PassManagerConfig(
#         basis_gates=backend.configuration().basis_gates,
#         coupling_map=CouplingMap(backend.configuration().coupling_map),
#         backend_properties=backend.properties())
#
#
# pm = level_3_pass_manager(pm_config(FakeMontreal()))
#
# print(pm.passes())
#
# print(dir(pm))
#
# print(QasmSimulator().available_devices())

#



# qaoa

d1 = {'011110': 5, '110001': 4, '011100': 10, '011111': 9, '111010': 12, '110000': 12, '000011': 11, '000001': 6, '010100': 6, '011000': 12, '001000': 6, '100011': 12, '010111': 12, '110101': 6, '101100': 28, '001010': 3, '000010': 10, '111000': 5, '111111': 6, '100010': 31, '110010': 52, '010110': 10, '000100': 11, '010001': 31, '101101': 28, '000111': 15, '000110': 10, '100110': 44, '111001': 14, '001110': 5, '101000': 17, '100111': 13, '100101': 3, '101001': 6, '110111': 11, '001001': 25, '010011': 49, '000101': 8, '010101': 19, '101111': 7, '111101': 10, '011001': 40, '010000': 14, '111011': 11, '001100': 25, '111100': 17, '110011': 15, '100100': 29, '011011': 25, '110110': 29, '010010': 31, '001111': 9, '011101': 33, '100000': 13, '011010': 12, '111110': 13, '101010': 12, '110100': 12, '001101': 35, '001011': 11, '101011': 8, '000000': 5, '101110': 31}
d2 = {'000111': 6, '111000': 4, '000001': 5, '100101': 1, '100001': 6, '001000': 9, '110111': 2, '111101': 1, '011001': 15, '001101': 17, '010101': 6, '100111': 5, '010111': 8, '100011': 12, '101101': 6, '001011': 49, '101011': 13, '000000': 6, '111111': 4, '100010': 52, '011111': 7, '101110': 54, '100000': 21, '100110': 56, '110000': 21, '011100': 1, '110001': 15, '010110': 9, '110010': 66, '110011': 17, '111100': 7, '000110': 31, '110101': 8, '111010': 13, '010011': 47, '101111': 8, '001100': 5, '111011': 5, '010000': 19, '100100': 16, '011011': 44, '110110': 16, '111110': 8, '011010': 23, '101010': 20, '000011': 21, '001110': 39, '101000': 14, '101100': 1, '010001': 17, '000010': 32, '001010': 24, '010100': 5, '011000': 4, '011110': 8, '110100': 9, '010010': 69, '001111': 17}

d1 = {'1000': 2, '0001': 2, '1001': 2, '0000': 3, '0111': 1, '0011': 103, '1110': 109, '0110': 100, '0100': 119, '1011': 107, '0010': 90, '1101': 112, '1111': 85, '0101': 98, '1100': 91}
d2 = {'0001': 58, '1000': 68, '0010': 74, '1101': 51, '1111': 63, '1010': 54, '1011': 58, '1100': 73, '0101': 68, '0100': 75, '0110': 72, '1110': 47, '0111': 63, '0000': 79, '0011': 56, '1001': 65}

d1 = {'011110': 5, '110001': 4, '011100': 10, '011111': 9, '111010': 12, '110000': 12, '000011': 11, '000001': 6, '010100': 6, '011000': 12, '001000': 6, '100011': 12, '010111': 12, '110101': 6, '101100': 28, '001010': 3, '000010': 10, '111000': 5, '111111': 6, '100010': 31, '110010': 52, '010110': 10, '000100': 11, '010001': 31, '101101': 28, '000111': 15, '000110': 10, '100110': 44, '111001': 14, '001110': 5, '101000': 17, '100111': 13, '100101': 3, '101001': 6, '110111': 11, '001001': 25, '010011': 49, '000101': 8, '010101': 19, '101111': 7, '111101': 10, '011001': 40, '010000': 14, '111011': 11, '001100': 25, '111100': 17, '110011': 15, '100100': 29, '011011': 25, '110110': 29, '010010': 31, '001111': 9, '011101': 33, '100000': 13, '011010': 12, '111110': 13, '101010': 12, '110100': 12, '001101': 35, '001011': 11, '101011': 8, '000000': 5, '101110': 31}

d2 = {'000111': 6, '111000': 4, '000001': 5, '100101': 1, '100001': 6, '001000': 9, '110111': 2, '111101': 1, '011001': 15, '001101': 17, '010101': 6, '100111': 5, '010111': 8, '100011': 12, '101101': 6, '001011': 49, '101011': 13, '000000': 6, '111111': 4, '100010': 52, '011111': 7, '101110': 54, '100000': 21, '100110': 56, '110000': 21, '011100': 1, '110001': 15, '010110': 9, '110010': 66, '110011': 17, '111100': 7, '000110': 31, '110101': 8, '111010': 13, '010011': 47, '101111': 8, '001100': 5, '111011': 5, '010000': 19, '100100': 16, '011011': 44, '110110': 16, '111110': 8, '011010': 23, '101010': 20, '000011': 21, '001110': 39, '101000': 14, '101100': 1, '010001': 17, '000010': 32, '001010': 24, '010100': 5, '011000': 4, '011110': 8, '110100': 9, '010010': 69, '001111': 17}


d1 =  {'0000': 80, '0111': 68, '0011': 62, '1100': 60, '0101': 73, '1101': 69, '0110': 74, '0100': 75, '1011': 52, '0001': 57, '1000': 59, '1001': 55, '1111': 70, '1010': 44, '0010': 57, '1110': 69}

d2 =  {'0001': 50, '0010': 63, '1011': 50, '1001': 53, '1000': 52, '1111': 80, '1010': 48, '1101': 66, '0000': 61, '0011': 61, '0111': 75, '1110': 65, '1100': 62, '0101': 88, '0100': 81, '0110': 69}

# qaoa n6
d1 =   {'011110': 5, '110001': 4, '011100': 10, '011111': 9, '111010': 12, '110000': 12, '000011': 11, '000001': 6, '010100': 6, '011000': 12, '001000': 6, '100011': 12, '010111': 12, '110101': 6, '101100': 28, '001010': 3, '000010': 10, '111000': 5, '111111': 6, '100010': 31, '110010': 52, '010110': 10, '000100': 11, '010001': 31, '101101': 28, '000111': 15, '000110': 10, '100110': 44, '111001': 14, '001110': 5, '101000': 17, '100111': 13, '100101': 3, '101001': 6, '110111': 11, '001001': 25, '010011': 49, '000101': 8, '010101': 19, '101111': 7, '111101': 10, '011001': 40, '010000': 14, '111011': 11, '001100': 25, '111100': 17, '110011': 15, '100100': 29, '011011': 25, '110110': 29, '010010': 31, '001111': 9, '011101': 33, '100000': 13, '011010': 12, '111110': 13, '101010': 12, '110100': 12, '001101': 35, '001011': 11, '101011': 8, '000000': 5, '101110': 31}

d2 =   {'000111': 6, '111000': 4, '000001': 5, '100101': 1, '100001': 6, '001000': 9, '110111': 2, '111101': 1, '011001': 15, '001101': 17, '010101': 6, '100111': 5, '010111': 8, '100011': 12, '101101': 6, '001011': 49, '101011': 13, '000000': 6, '111111': 4, '100010': 52, '011111': 7, '101110': 54, '100000': 21, '100110': 56, '110000': 21, '011100': 1, '110001': 15, '010110': 9, '110010': 66, '110011': 17, '111100': 7, '000110': 31, '110101': 8, '111010': 13, '010011': 47, '101111': 8, '001100': 5, '111011': 5, '010000': 19, '100100': 16, '011011': 44, '110110': 16, '111110': 8, '011010': 23, '101010': 20, '000011': 21, '001110': 39, '101000': 14, '101100': 1, '010001': 17, '000010': 32, '001010': 24, '010100': 5, '011000': 4, '011110': 8, '110100': 9, '010010': 69, '001111': 17}



d1_list = []

for a in d1:
    d1_list.append((int(a, 2), d1[a]))

d1_list.sort(key=lambda x: x[0])

d2_list = []

for a in d2:
    d2_list.append((int(a, 2), d2[a]))

d2_list.sort(key=lambda x: x[0])


print(d1_list)
print(d2_list)


import matplotlib.pyplot as plt

plt.plot([x[0] for x in d1_list], [x[1] for x in d1_list])

plt.plot([x[0] for x in d2_list], [x[1] for x in d2_list])

plt.show()


# error correctiond3 n5

d1 = {'01001': 67, '10111': 58, '11110': 59, '10100': 61, '11101': 75, '00011': 55, '00000': 65, '11011': 75, '10010': 70, '01100': 64, '00101': 60, '01010': 61, '01111': 62, '00110': 52, '10001': 74, '11000': 66}
d2 = {'00110': 28, '01110': 31, '11010': 30, '11000': 28, '10111': 35, '11100': 28, '11110': 30, '00111': 38, '00001': 29, '01101': 26, '11001': 40, '01000': 33, '11011': 30, '10100': 30, '11101': 41, '01100': 28, '01001': 34, '00101': 32, '00000': 32, '01011': 35, '00100': 21, '00011': 32, '10110': 25, '10010': 34, '11111': 49, '01111': 24, '10001': 36, '01010': 29, '10011': 32, '00010': 37, '10101': 36, '10000': 31}

d1 = {'1000': 2, '0001': 2, '1001': 2, '0000': 3, '0111': 1, '0011': 103, '1110': 109, '0110': 100, '0100': 119, '1011': 107, '0010': 90, '1101': 112, '1111': 85, '0101': 98, '1100': 91}
d2 = {'0001': 58, '1000': 68, '0010': 74, '1101': 51, '1111': 63, '1010': 54, '1011': 58, '1100': 73, '0101': 68, '0100': 75, '0110': 72, '1110': 47, '0111': 63, '0000': 79, '0011': 56, '1001': 65}


d1_list = []

for a in d1:
    d1_list.append((int(a, 2), d1[a]))

d1_list.sort(key=lambda x: x[0])

d2_list = []

for a in d2:
    d2_list.append((int(a, 2), d2[a]))

d2_list.sort(key=lambda x: x[0])


print(d1_list)
print(d2_list)


import matplotlib.pyplot as plt

plt.scatter([x[0] for x in d1_list], [x[1] for x in d1_list], label='Baseline')

plt.scatter([x[0] for x in d2_list], [x[1] for x in d2_list], label='RPOLevel3Pure')

plt.xlabel('Result state')

plt.ylabel('Number of occurences')

plt.legend()


plt.show()

